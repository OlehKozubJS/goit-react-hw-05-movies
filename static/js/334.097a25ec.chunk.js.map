{"version":3,"file":"static/js/334.097a25ec.chunk.js","mappings":"uYAEMA,EAAU,mCACVC,EAAM,gCAECC,EAAoB,mCAAG,6FAC5BC,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,EACTM,YAAa,QAHmB,SAKXC,EAAAA,EAAAA,IAAUN,EAAM,oBAAsBE,GAL3B,cAK5BK,EAL4B,gBAMrBA,EAASC,KANY,mFAAH,qDASpBC,EAAgB,mCAAG,WAAMC,GAAN,gFACxBR,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,EACTY,MAAOD,IAHqB,SAKPJ,EAAAA,EAAAA,IAAUN,EAAM,gBAAkBE,GAL3B,cAKxBK,EALwB,gBAMjBA,EAASC,KANQ,mFAAH,sDAShBI,EAAiB,mCAAG,WAAMC,GAAN,gFACzBX,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAFoB,SAIRO,EAAAA,EAAAA,IAAUN,EAAG,gBAAYa,EAAZ,KAAoBX,GAJzB,cAIzBK,EAJyB,gBAKlBA,EAASC,KALS,mFAAH,sDAQjBM,EAAiB,mCAAG,WAAMD,GAAN,gFACzBX,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAFoB,SAIRO,EAAAA,EAAAA,IAAUN,EAAG,gBAAYa,EAAZ,aAA4BX,GAJjC,cAIzBK,EAJyB,gBAKlBA,EAASC,KALS,mFAAH,sDAQjBO,EAAiB,mCAAG,WAAMF,GAAN,gFACzBX,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAFoB,SAIRO,EAAAA,EAAAA,IAAUN,EAAG,gBAAYa,EAAZ,aAA4BX,GAJjC,cAIzBK,EAJyB,gBAKlBA,EAASC,KALS,mFAAH,qD,4JCnCjBQ,EAAe,WAAO,IAAD,IACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOS,EAAP,KAAeC,EAAf,KACMC,EAAY,oBAAGb,EAASc,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAkB7C,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAECxB,EAAAA,EAAAA,mBAAkBK,GAFnB,OAEdoB,EAFc,OAGpBd,EAASc,EAAOf,OAChBG,EAASY,EAAOC,aAChBT,EAAYQ,EAAOT,UACnBD,EAASU,EAAOE,cAChBR,EAAUM,EAAOP,QAPG,kDASpBU,QAAQC,IAAI,wBATQ,0DAAH,qDAYrBL,GACD,GAAE,CAACnB,KAGF,4BACE,4BACE,SAAC,KAAD,CAAMyB,GAAIV,EAAV,6BACA,gBACEW,MAAO,CAAEC,QAAS,SAClBC,MAAM,QACNC,IAAK,kCAAoCtB,EACzCuB,IAAI,MAEN,wBAAKzB,KACL,uCAAe0B,KAAKC,MAAc,GAARvB,OAC1B,sCACA,uBAAIE,KACJ,oCACA,wBACGE,EAAOoB,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMzC,MAAjByC,EAAMtC,GADA,UAKrB,0BACE,2BACE,yBACE,SAAC,KAAD,CAAM6B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,6BAIN,SAAC,EAAAU,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,EAED,W","sources":["components/js/fetchMovies.js","components/pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'e5eae3e86944a38d68a9b48044e5baf0';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchFavouriteMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    time_window: 'day',\n  });\n  const response = await axios.get(URL + 'trending/all/day?' + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieByName = async name => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: name,\n  });\n  const response = await axios.get(URL + 'search/movie?' + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(URL + `movie/${id}?` + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(URL + `movie/${id}/credits?` + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(URL + `movie/${id}/reviews?` + searchParams);\n  return await response.data;\n};\n","import { fetchMovieDetails } from '../js/fetchMovies';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [score, setScore] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const result = await fetchMovieDetails(movieId);\n        setTitle(result.title);\n        setImage(result.poster_path);\n        setOverview(result.overview);\n        setScore(result.vote_average);\n        setGenres(result.genres);\n      } catch {\n        console.log('The fetch has failed');\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <div>\n        <Link to={backLinkHref}>Back to movies</Link>\n        <img\n          style={{ display: 'block' }}\n          width=\"100px\"\n          src={`https://image.tmdb.org/t/p/w500` + image}\n          alt=\"\"\n        />\n        <h2>{title}</h2>\n        <p>Use Score: {Math.floor(score * 10)}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <ul>\n          {genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </nav>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","URL","fetchFavouriteMovies","searchParams","URLSearchParams","api_key","time_window","axios","response","data","fetchMovieByName","name","query","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","MovieDetails","movieId","useParams","location","useLocation","useState","title","setTitle","image","setImage","score","setScore","overview","setOverview","genres","setGenres","backLinkHref","state","from","useEffect","getMovieDetails","result","poster_path","vote_average","console","log","to","style","display","width","src","alt","Math","floor","map","genre","Suspense","fallback"],"sourceRoot":""}