{"version":3,"file":"static/js/451.7d02a796.chunk.js","mappings":"wQAIaA,EAAO,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8CC,EAAAA,EAAAA,UAAS,IAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,8GAEFC,EAAAA,EAAAA,wBAFE,OAEjBC,EAFiB,OAGvBJ,EAAmBI,EAAOC,SAHH,gDAKvBC,QAAQC,IAAI,wBALW,yDAAH,qDAQxBL,GACD,GAAE,KAGD,4BACE,4CACA,wBACGH,EAAgBS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACnB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMlB,GAA1C,SACGc,GAASC,KAFLF,EADU,QAU5B,EAED,W,mRClCMM,EAAU,mCACVC,EAAM,gCAECb,EAAoB,mCAAG,6FAC5Bc,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,EACTK,YAAa,QAHmB,SAKXC,EAAAA,EAAAA,IAAUL,EAAM,oBAAsBC,GAL3B,cAK5BK,EAL4B,gBAMrBA,EAASC,KANY,mFAAH,qDASpBC,EAAgB,mCAAG,WAAMb,GAAN,gFACxBM,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,EACTU,MAAOd,IAHqB,SAKPU,EAAAA,EAAAA,IAAUL,EAAM,gBAAkBC,GAL3B,cAKxBK,EALwB,gBAMjBA,EAASC,KANQ,mFAAH,sDAShBG,EAAiB,mCAAG,WAAMjB,GAAN,gFACzBQ,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,IAFoB,SAIRM,EAAAA,EAAAA,IAAUL,EAAG,gBAAYP,EAAZ,KAAoBQ,GAJzB,cAIzBK,EAJyB,gBAKlBA,EAASC,KALS,mFAAH,sDAQjBI,EAAiB,mCAAG,WAAMlB,GAAN,gFACzBQ,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,IAFoB,SAIRM,EAAAA,EAAAA,IAAUL,EAAG,gBAAYP,EAAZ,aAA4BQ,GAJjC,cAIzBK,EAJyB,gBAKlBA,EAASC,KALS,mFAAH,sDAQjBK,EAAiB,mCAAG,WAAMnB,GAAN,gFACzBQ,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,IAFoB,SAIRM,EAAAA,EAAAA,IAAUL,EAAG,gBAAYP,EAAZ,aAA4BQ,GAJjC,cAIzBK,EAJyB,gBAKlBA,EAASC,KALS,mFAAH,qD","sources":["components/Home.jsx","components/js/fetchMovies.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchFavouriteMovies } from './js/fetchMovies';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Home = () => {\n  const location = useLocation();\n  const [favouriteMovies, setFavouriteMovies] = useState([]);\n\n  useEffect(() => {\n    const getFavouriteMovies = async () => {\n      try {\n        const result = await fetchFavouriteMovies();\n        setFavouriteMovies(result.results);\n      } catch {\n        console.log('The fetch has failed');\n      }\n    };\n    getFavouriteMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending Today</h1>\n      <ul>\n        {favouriteMovies.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'e5eae3e86944a38d68a9b48044e5baf0';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchFavouriteMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    time_window: 'day',\n  });\n  const response = await axios.get(URL + 'trending/all/day?' + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieByName = async name => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: name,\n  });\n  const response = await axios.get(URL + 'search/movie?' + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(URL + `movie/${id}?` + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(URL + `movie/${id}/credits?` + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(URL + `movie/${id}/reviews?` + searchParams);\n  return await response.data;\n};\n"],"names":["Home","location","useLocation","useState","favouriteMovies","setFavouriteMovies","useEffect","getFavouriteMovies","fetchFavouriteMovies","result","results","console","log","map","id","title","name","to","state","from","API_KEY","URL","searchParams","URLSearchParams","api_key","time_window","axios","response","data","fetchMovieByName","query","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}