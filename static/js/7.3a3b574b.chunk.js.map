{"version":3,"file":"static/js/7.3a3b574b.chunk.js","mappings":"qYAEMA,EAAU,mCACVC,EAAM,gCAECC,EAAoB,mCAAG,6FAC5BC,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,EACTM,YAAa,QAHmB,SAKXC,EAAAA,EAAAA,IAAUN,EAAM,oBAAsBE,GAL3B,cAK5BK,EAL4B,gBAMrBA,EAASC,KANY,mFAAH,qDASpBC,EAAgB,mCAAG,WAAMC,GAAN,gFACxBR,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,EACTY,MAAOD,IAHqB,SAKPJ,EAAAA,EAAAA,IAAUN,EAAM,gBAAkBE,GAL3B,cAKxBK,EALwB,gBAMjBA,EAASC,KANQ,mFAAH,sDAShBI,EAAiB,mCAAG,WAAMC,GAAN,gFACzBX,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAFoB,SAIRO,EAAAA,EAAAA,IAAUN,EAAG,gBAAYa,EAAZ,KAAoBX,GAJzB,cAIzBK,EAJyB,gBAKlBA,EAASC,KALS,mFAAH,sDAQjBM,EAAiB,mCAAG,WAAMD,GAAN,gFACzBX,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAFoB,SAIRO,EAAAA,EAAAA,IAAUN,EAAG,gBAAYa,EAAZ,aAA4BX,GAJjC,cAIzBK,EAJyB,gBAKlBA,EAASC,KALS,mFAAH,sDAQjBO,EAAiB,mCAAG,WAAMF,GAAN,gFACzBX,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAFoB,SAIRO,EAAAA,EAAAA,IAAUN,EAAG,gBAAYa,EAAZ,aAA4BX,GAJjC,cAIzBK,EAJyB,gBAKlBA,EAASC,KALS,mFAAH,qD,oJCnCjBQ,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAqBA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEEhB,EAAAA,EAAAA,kBAAiBW,GAFnB,OAEbM,EAFa,OAGnBH,EAAUG,EAAOC,SAHE,gDAKnBC,QAAQC,IAAI,wBALO,yDAAH,qDAQpBJ,GACD,GAAE,CAACL,KAGF,4BACE,kBAAMU,SArBW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,cAAcC,SAASC,eAAeC,MAC/DhB,EAAeY,GACfF,EAAMG,cAAcI,OACrB,EAgBG,WACE,kBAAO5B,KAAK,iBAAiB6B,KAAK,UAClC,mBAAQA,KAAK,SAAb,wBAEF,wBACGjB,EAAOkB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAM5B,IAAM8B,MAAO,CAAEC,KAAM3B,GAAxC,SACGwB,EAAMI,OAASJ,EAAM/B,QAFjB+B,EAAM5B,GADA,QAUxB,EAED,W","sources":["components/js/fetchMovies.js","components/pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'e5eae3e86944a38d68a9b48044e5baf0';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchFavouriteMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    time_window: 'day',\n  });\n  const response = await axios.get(URL + 'trending/all/day?' + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieByName = async name => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: name,\n  });\n  const response = await axios.get(URL + 'search/movie?' + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(URL + `movie/${id}?` + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(URL + `movie/${id}/credits?` + searchParams);\n  return await response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const response = await axios.get(URL + `movie/${id}/reviews?` + searchParams);\n  return await response.data;\n};\n","import { fetchMovieByName } from '../js/fetchMovies';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Movies = () => {\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchText = event.currentTarget.elements.movieNameInput.value;\n    setSearchQuery(searchText);\n    event.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    const getMovieByName = async () => {\n      try {\n        const result = await fetchMovieByName(searchQuery);\n        setMovies(result.results);\n      } catch {\n        console.log('The fetch has failed');\n      }\n    };\n    getMovieByName();\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input name=\"movieNameInput\" type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","URL","fetchFavouriteMovies","searchParams","URLSearchParams","api_key","time_window","axios","response","data","fetchMovieByName","name","query","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","Movies","location","useLocation","useState","searchQuery","setSearchQuery","movies","setMovies","useEffect","getMovieByName","result","results","console","log","onSubmit","event","preventDefault","searchText","currentTarget","elements","movieNameInput","value","reset","type","map","movie","to","state","from","title"],"sourceRoot":""}